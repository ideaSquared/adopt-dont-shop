name: Docker

on:
  push:
    branches: [main, develop]
    paths:
      - '**/Dockerfile'
      - 'service.backend/**'
      - 'app.client/**'
      - 'app.admin/**'
      - 'app.rescue/**'
      - 'lib.components/**'
      - 'docker-compose*.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - '**/Dockerfile'
      - 'service.backend/**'
      - 'app.client/**'
      - 'app.admin/**'
      - 'app.rescue/**'
      - 'lib.components/**'
      - 'docker-compose*.yml'

jobs:
  # Temporarily commented out Docker image building
  # build-images:
  #   name: Build Docker Images
  #   runs-on: ubuntu-latest

  #   strategy:
  #     matrix:
  #       service: [service.backend, app.client, app.admin, app.rescue, lib.components]

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Build Docker image
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: ./${{ matrix.service }}
  #         file: ./${{ matrix.service }}/Dockerfile
  #         push: false
  #         tags: adopt-dont-shop/${{ matrix.service }}:test
  #         cache-from: type=gha
  #         cache-to: type=gha,mode=max

  # test-compose:
  #   name: Test Docker Compose
  #   runs-on: ubuntu-latest
  #   needs: build-images

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Create test environment file
  #       run: |
  #         cat << EOF > .env
  #         NODE_ENV=development
  #         DATABASE_URL=postgresql://postgres:password@postgres:5432/adopt_dont_shop
  #         JWT_SECRET=test-secret-key
  #         JWT_REFRESH_SECRET=test-refresh-secret-key
  #         EMAIL_PROVIDER=console
  #         FRONTEND_URL=http://localhost:3004
  #         EOF

  #     - name: Start services with Docker Compose
  #       run: docker-compose up -d --build

  #     - name: Wait for services to be ready
  #       run: sleep 30

  #     - name: Test backend health
  #       run: |
  #         timeout 30 bash -c 'until curl -f http://localhost:3000/health; do sleep 2; done' || true

  #     - name: Test frontend accessibility
  #       run: |
  #         timeout 30 bash -c 'until curl -f http://localhost:3001; do sleep 2; done' || true

  #     - name: Show service logs
  #       if: failure()
  #       run: docker-compose logs

  #     - name: Cleanup
  #       if: always()
  #       run: docker-compose down -v

  # Placeholder job to keep the workflow valid
  placeholder:
    name: Docker builds disabled
    runs-on: ubuntu-latest
    steps:
      - name: Info
        run: echo "Docker image building is currently disabled"
